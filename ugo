#!/bin/sh
set -e

PPWD="$PWD"
UGO_ROOT=""
for i in $(echo $PWD | tr "/" "\n")
do
    if test -f .gopackage
    then
        export UGO_ROOT="$PWD"
        export UGO_PACKAGE="$(cat .gopackage)"
        break
    fi
    cd ..
done

if [ "$UGO_ROOT" = "" ]
then
    echo "ugo requires a .gopackage file in your packages root that contains the full package name"
    cd "$PPWD"
    for i in $(echo $PWD | tr "/" "\n")
    do
        if test -d .git && git ls-remote --get-url | grep -q '://github.com/'
        then
            p="$(git ls-remote --get-url   | cut -d '/' -f 3-)"
            pp="$(dirname $p)/$(basename $p .git)"

            echo "press return to create a .gopackage now with content: $pp"
            read
            echo "$pp" > .gopackage
            export UGO_ROOT="$PWD"
            export UGO_PACKAGE="$(cat .gopackage)"
            break
        fi
        cd ..
    done
fi

if [ "$UGO_ROOT" = "" ]
then
    exit 2
fi

UGO_FN="${UGO_ROOT}/.workspace/src/${UGO_PACKAGE}"
mkdir -p "$(dirname ${UGO_FN})"
test -e "${UGO_FN}" && rm "${UGO_FN}"
ln -sf "${UGO_ROOT}" "${UGO_FN}"

cd "${UGO_FN}"
export GOPATH="${UGO_ROOT}/.workspace/:${UGO_ROOT}:${GOPATH}"

while true
do
    case "$1" in
        -h)
            echo "usage: $o [options] command"
            echo " options:"
            echo "  -h help"
            echo "  -r replace existing GOPATH instead of adding"
            exit 2
            ;;
        -r)
            export GOPATH="${UGO_ROOT}/.workspace/"
            shift
            ;;
        *)
            "$@"
            exit $?
            ;;
    esac
done
